import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.*;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;

public class ReadXLSFile {

    public static void main(String[] args) {
        String filePath = "./data.xls";

        try (FileInputStream fis = new FileInputStream(new File(filePath));
             Workbook workbook = new HSSFWorkbook(fis)) {

            // Iterate through all sheets
            for (Sheet sheet : workbook) {
                System.out.println("Processing sheet: " + sheet.getSheetName());

                // Iterate through all rows
                for (Row row : sheet) {
                    // Read specific columns (A=0, B=1, F=5, H=7, J=9, L=11, N=13)
                    String colA = getCellValue(row, 0); // Column A
                    String colB = getCellValue(row, 1); // Column B
                    String colF = getCellValue(row, 5); // Column F
                    String colH = getCellValue(row, 7); // Column H
                    String colJ = getCellValue(row, 9); // Column J
                    String colL = getCellValue(row, 11); // Column L
                    String colN = getCellValue(row, 13); // Column N

                    // Print or process these values
                    System.out.printf("A=%s, B=%s, F=%s, H=%s, J=%s, L=%s, N=%s%n", colA, colB, colF, colH, colJ, colL, colN);
                }
            }

        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    // Utility to get cell value as String
    private static String getCellValue(Row row, int cellIndex) {
        Cell cell = row.getCell(cellIndex);
        if (cell == null) return "";
        switch (cell.getCellType()) {
            case STRING:
                return cell.getStringCellValue();
            case NUMERIC:
                return String.valueOf(cell.getNumericCellValue());
            case BOOLEAN:
                return String.valueOf(cell.getBooleanCellValue());
            case FORMULA:
                return cell.getCellFormula();
            default:
                return "";
        }
    }
}