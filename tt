rimport org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.edge.EdgeDriver;
import org.openqa.selenium.edge.EdgeOptions;
import io.github.bonigarcia.wdm.WebDriverManager;

import java.io.File;
import java.util.HashMap;

public class SharePointFileDownload {
    public static void main(String[] args) {
        WebDriverManager.edgedriver().setup();
        String downloadFilePath = System.getProperty("user.dir") + File.separator + "downloads";

        EdgeOptions options = new EdgeOptions();
        HashMap<String, Object> prefs = new HashMap<>();
        prefs.put("download.default_directory", downloadFilePath);
        prefs.put("download.prompt_for_download", false);
        options.setExperimentalOption("prefs", prefs);

        WebDriver driver = new EdgeDriver(options);

        try {
            // Navigate to SharePoint and log in
            driver.get("https://your-sharepoint-site-url");

            // Example for finding the file link
            WebElement fileDownloadLink = driver.findElement(By.xpath("//a[contains(text(), 'your-file-name')]"));

            // Attempt to get the href
            String fileUrl = fileDownloadLink.getAttribute("href");
            System.out.println("File URL: " + fileUrl);

            if (fileUrl == null || fileUrl.isEmpty()) {
                System.out.println("File URL is null. Trying onclick or direct click.");
                String onclickAttribute = fileDownloadLink.getAttribute("onclick");
                System.out.println("Onclick attribute: " + onclickAttribute);

                // Fallback to clicking the element if href is null
                fileDownloadLink.click();

                // Wait for download completion (use better wait mechanisms)
                Thread.sleep(5000);
            } else {
                System.out.println("Direct URL found: " + fileUrl);
                // Download the file directly
                downloadFileDirectly(fileUrl, downloadFilePath + File.separator + "your-file-name.extension");
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            driver.quit();
        }
    }

    private static void downloadFileDirectly(String fileUrl, String destinationPath) throws Exception {
        java.net.URL url = new java.net.URL(fileUrl);
        java.nio.file.Path targetPath = java.nio.file.Paths.get(destinationPath);
        try (java.io.InputStream in = url.openStream()) {
            java.nio.file.Files.copy(in, targetPath, java.nio.file.StandardCopyOption.REPLACE_EXISTING);
        }
    }
}