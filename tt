import org.apache.poi.ss.usermodel.*;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.util.HashSet;
import java.util.LinkedHashSet;
import java.util.Set;

public class FilterUniqueRecords {

    public static void main(String[] args) throws Exception {
        // Step 1: Read xls1
        FileInputStream fis = new FileInputStream("xls1.xlsx");
        Workbook workbook = new XSSFWorkbook(fis);
        Sheet sheet = workbook.getSheetAt(0);

        // Step 2: Filter records where the column "match" has a specific value and capture unique rows
        String filterValue = "matchValue"; // Replace with the value you want to filter
        int matchColumnIndex = -1; // Index of "match" column (to be determined dynamically)
        Set<String> uniqueRecords = new LinkedHashSet<>();

        // Find the "match" column by name (header row assumed to be the first row)
        Row headerRow = sheet.getRow(0);
        for (Cell cell : headerRow) {
            if (cell.getStringCellValue().equalsIgnoreCase("match")) {
                matchColumnIndex = cell.getColumnIndex();
                break;
            }
        }

        if (matchColumnIndex == -1) {
            System.err.println("Column 'match' not found in the sheet!");
            workbook.close();
            return;
        }

        // Loop through the rows and filter by "match" column
        for (Row row : sheet) {
            if (row.getRowNum() == 0) continue; // Skip header row
            Cell matchCell = row.getCell(matchColumnIndex);

            if (matchCell != null && matchCell.getStringCellValue().equalsIgnoreCase(filterValue)) {
                // Capture unique records (entire row as a concatenated string)
                StringBuilder rowData = new StringBuilder();
                for (Cell cell : row) {
                    rowData.append(cell.toString()).append("|"); // Use a delimiter to separate cell values
                }
                uniqueRecords.add(rowData.toString());
            }
        }

        workbook.close();

        // Step 3: Save unique records into a new Excel file
        Workbook outputWorkbook = new XSSFWorkbook();
        Sheet outputSheet = outputWorkbook.createSheet("Unique Records");

        int rowIndex = 0;
        for (String record : uniqueRecords) {
            Row newRow = outputSheet.createRow(rowIndex++);
            String[] cellValues = record.split("\\|");
            for (int i = 0; i < cellValues.length; i++) {
                newRow.createCell(i).setCell