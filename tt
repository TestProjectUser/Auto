import pandas as pd

# Load Excel
df = pd.read_excel("report.xlsx")

# Apply inline lambda to color Status column
styled_df = df.style.applymap(
    lambda x: 'color: green; font-weight: bold' if str(x).lower() == 'pass' 
              else 'color: red; font-weight: bold' if str(x).lower() == 'fail' 
              else 'color: black', 
    subset=['Status']  # Replace 'Status' with your column name
)

# Convert to HTML
html_content = styled_df.render()

# File path
fpath = "."  # folder
file = "report.html"
var1 = f"{fpath}/{file}"

# HTML template with table fitting page width
html_template = f"""
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Excel Report</title>
<style>
    body {{
        font-family: Arial, sans-serif;
        background-color: #f4f7f9;
        padding: 20px;
    }}
    h2 {{
        text-align: center;
        color: #333;
    }}
    table {{
        border-collapse: collapse;
        width: 100%;
        table-layout: fixed;  
        word-wrap: break-word; 
        background: white;
        box-shadow: 0px 3px 6px rgba(0,0,0,0.1);
    }}
    th, td {{
        border: 1px solid #ddd;
        padding: 10px;
        text-align: center;
        overflow: hidden;
    }}
    th {{
        background-color: #4CAF50;
        color: white;
    }}
    tr:nth-child(even) {{ background-color: #f2f2f2; }}
    tr:hover {{ background-color: #ddd; }}
</style>
</head>
<body>
    <h2>Excel Report</h2>
    {html_content}
</body>
</html>
"""

# Save HTML
with open(var1, "w", encoding="utf-8") as f:
    f.write(html_template)

print(f"âœ… Report saved as {var1}, fits page width without scroll")