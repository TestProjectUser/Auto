import io.restassured.RestAssured;
import io.restassured.response.Response;
import tech.tablesaw.api.Table;
import tech.tablesaw.io.xlsx.XlsxReadOptions;
import tech.tablesaw.io.xlsx.XlsxWriter;

import java.io.File;

public class ExcelRestAssuredWithTableSaw {

    public static void main(String[] args) {
        // File and Sheet Information
        String filePath = "./data.xlsx"; // Path to Excel file
        String sheetName = "Sheet1";     // Sheet name to read/write

        try {
            // Step 1: Read the Excel file
            XlsxReadOptions readOptions = XlsxReadOptions.builder(new File(filePath))
                    .sheetName(sheetName)
                    .build();
            Table table = Table.read().usingOptions(readOptions);
            System.out.println("Original Excel Data:\n" + table);

            // Step 2: Read value from the first row and first column (A1)
            String cellValue = table.stringColumn(0).get(0); // Column index 0, Row index 0
            System.out.println("Value from Excel (A1): " + cellValue);

            // Step 3: Create the XML request payload
            String xmlRequest = "<Request>\n" +
                    "    <Id>" + cellValue + "</Id>\n" +
                    "    <Details>Requesting details for ID " + cellValue + "</Details>\n" +
                    "</Request>";

            // Step 4: Make an API request using Rest-Assured
            RestAssured.baseURI = "https://example.com/api";
            Response response = RestAssured.given()
                    .header("Content-Type", "application/xml")
                    .body(xmlRequest)
                    .post("/endpoint") // Replace with your actual endpoint
                    .then()
                    .extract().response();

            String responseBody = response.asString();
            System.out.println("API Response: " + responseBody);

            // Step 5: Write the response to a new column (B1)
            if (!table.columnNames().contains("Response")) {
                table.addColumns(table.stringColumn("Response").emptyCopy());
            }
            table.stringColumn("Response").set(0, responseBody);

            // Step 6: Save the updated Excel file
            XlsxWriter writer = new XlsxWriter();
            writer.write(table, new File(filePath));

            System.out.println("Updated Excel Data:\n" + table);
            System.out.println("Response written to Excel (B1).");

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}