import io.restassured.RestAssured;
import io.restassured.config.SSLConfig;
import io.restassured.specification.RequestSpecification;

import javax.net.ssl.SSLContext;
import javax.net.ssl.KeyManagerFactory;
import javax.net.ssl.TrustManagerFactory;
import java.io.FileInputStream;
import java.security.KeyStore;
import java.security.SecureRandom;

public class RestAssuredSSLExample {
    
    public static void main(String[] args) throws Exception {
        // Path to your PKCS12 (.p12) keystore file
        String keystorePath = "/path/to/keystore.p12";  // Replace with your file path
        String keystorePassword = "changeit";  // Replace with your password

        // Load the PKCS12 keystore
        KeyStore keyStore = KeyStore.getInstance("PKCS12");
        try (FileInputStream keyStoreFile = new FileInputStream(keystorePath)) {
            keyStore.load(keyStoreFile, keystorePassword.toCharArray());
        }

        // Initialize KeyManagerFactory with the keystore
        KeyManagerFactory keyManagerFactory = KeyManagerFactory.getInstance("SunX509");
        keyManagerFactory.init(keyStore, keystorePassword.toCharArray());

        // Initialize TrustManagerFactory with the default CA certificates
        TrustManagerFactory trustManagerFactory = TrustManagerFactory.getInstance("SunX509");
        trustManagerFactory.init((KeyStore) null); // Use system's default trust store

        // Create SSLContext with KeyManagers and TrustManagers
        SSLContext sslContext = SSLContext.getInstance("TLS");
        sslContext.init(keyManagerFactory.getKeyManagers(), trustManagerFactory.getTrustManagers(), new SecureRandom());

        // âœ… Use SSLContext with RestAssured without deprecated methods
        RestAssured.useRelaxedHTTPSValidation();
        RequestSpecification requestSpec = RestAssured.given()
                .config(RestAssured.config().sslConfig(new SSLConfig().sslContext(sslContext)))
                .baseUri("https://your.api.url");

        // Send an API request
        String response = requestSpec
                .body("{ \"data\": \"value\" }")  // Replace with actual request body
                .when()
                .post("/api/endpoint")
                .then()
                .statusCode(200)  // Adjust expected status code if needed
                .extract().asString();

        System.out.println("Response: " + response);
    }
}