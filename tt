import com.microsoft.aad.msal4j.*;
import java.net.URI;
import java.util.Collections;
import java.util.Set;

public class SharePointLogin {

    // Define your application details
    private static final String CLIENT_ID = "your-client-id";
    private static final String CLIENT_SECRET = "your-client-secret";
    private static final String TENANT_ID = "your-tenant-id";
    private static final String AUTHORITY = "https://login.microsoftonline.com/" + TENANT_ID;
    private static final String RESOURCE = "https://your-sharepoint-domain.sharepoint.com";
    private static final String REDIRECT_URI = "http://localhost";

    private static IAuthenticationResult authResult;

    public static void main(String[] args) {
        try {
            if (isLoggedIn()) {
                System.out.println("Already logged in.");
                System.out.println("Token: " + authResult.accessToken());
            } else {
                System.out.println("Not logged in. Signing in...");
                signIn();
            }

            // Perform SharePoint operations here...

            // Sign out
            System.out.println("Signing out...");
            signOut();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private static boolean isLoggedIn() {
        return authResult != null && !authResult.expiresOnDate().before(new java.util.Date());
    }

    private static void signIn() throws Exception {
        ConfidentialClientApplication app = ConfidentialClientApplication.builder(CLIENT_ID,
                ClientCredentialFactory.createFromSecret(CLIENT_SECRET))
                .authority(AUTHORITY)
                .build();

        // Request token for the resource (SharePoint)
        Set<String> scopes = Collections.singleton(RESOURCE + "/.default");
        ClientCredentialParameters parameters = ClientCredentialParameters.builder(scopes).build();

        authResult = app.acquireToken(parameters).join();

        System.out.println("Logged in successfully.");
        System.out.println("Access Token: " + authResult.accessToken());
    }

    private static void signOut() {
        authResult = null;
        System.out.println("Signed out successfully.");
    }
}