import io.restassured.RestAssured;
import io.restassured.response.Response;
import org.apache.poi.ss.usermodel.*;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.json.JSONObject;

import java.io.File;
import java.io.FileInputStream;
import java.nio.file.Files;
import java.nio.file.Paths;

import static io.restassured.RestAssured.given;

public class RestAssuredExcelTest {
    public static void main(String[] args) {
        String excelFilePath = "data.xlsx"; // Path to your Excel file
        String jsonTemplatePath = "template.json"; // Path to your JSON template file
        String apiHost = "https://your-api-host.com"; // API host URL

        try {
            // Step 1: Read 'fam' value from Excel file
            FileInputStream fis = new FileInputStream(new File(excelFilePath));
            Workbook workbook = new XSSFWorkbook(fis);
            Sheet sheet = workbook.getSheetAt(0); // Assuming 'fam' is in the first sheet
            Row row = sheet.getRow(1); // Read second row (first row is header)
            String famValue = row.getCell(1).getStringCellValue(); // Read 'fam' value
            workbook.close();

            // Step 2: Read JSON template file
            String jsonContent = new String(Files.readAllBytes(Paths.get(jsonTemplatePath)));

            // Step 3: Convert JSON string to JSONObject
            JSONObject jsonObject = new JSONObject(jsonContent);

            // Step 4: Update 'fam' value in JSON
            jsonObject.put("fam", famValue);

            // Step 5: Send POST request
            RestAssured.baseURI = apiHost;

            Response response = given()
                    .relaxedHTTPSValidation() // Ignore SSL certificate issues
                    .header("Content-Type", "application/json")
                    .header("cust", "value") // Custom header
                    .body(jsonObject.toString()) // Use updated JSON as request body
                    .when()
                    .post("/update")  // API endpoint
                    .then()
                    .statusCode(200)  // Expecting HTTP 200 OK response
                    .extract()
                    .response();

            // Step 6: Print response
            System.out.println("Response: " + response.getBody().asString());

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}