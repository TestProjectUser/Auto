import io.restassured.RestAssured;
import io.restassured.response.Response;
import org.apache.poi.ss.usermodel.*;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import com.jayway.jsonpath.DocumentContext;
import com.jayway.jsonpath.JsonPath;

import java.io.File;
import java.io.FileInputStream;
import java.nio.file.Files;
import java.nio.file.Paths;

import static io.restassured.RestAssured.given;

public class RestAssuredExcelUpdateTest {
    public static void main(String[] args) {
        String excelFilePath = "data.xlsx"; // Path to Excel file
        String jsonTemplatePath = "template.json"; // Path to JSON template file
        String apiHost = "https://your-api-host.com"; // API host URL

        try {
            // Step 1: Read the Excel file
            FileInputStream fis = new FileInputStream(new File(excelFilePath));
            Workbook workbook = new XSSFWorkbook(fis);
            Sheet sheet = workbook.getSheetAt(0); // Read first sheet
            int totalRows = sheet.getPhysicalNumberOfRows(); // Count rows

            // Step 2: Loop through all rows (excluding the header row)
            for (int i = 1; i < totalRows; i++) { // Start from row 1 (skip header)
                Row row = sheet.getRow(i);
                if (row == null) continue;

                // Read 'fam' value from the current row
                Cell cell = row.getCell(1); // Assuming 'fam' is in column B (index 1)
                String famValue = (cell != null) ? cell.getStringCellValue() : "";

                // Step 3: Read JSON template file
                String jsonContent = new String(Files.readAllBytes(Paths.get(jsonTemplatePath)));

                // Step 4: Parse JSON using JsonPath and update 'fam'
                DocumentContext jsonContext = JsonPath.parse(jsonContent);
                jsonContext.set("$.fam", famValue); // Update existing 'fam' key

                // Step 5: Send POST request for each row
                RestAssured.baseURI = apiHost;

                Response response = given()
                        .relaxedHTTPSValidation() // Ignore SSL certificate issues
                        .header("Content-Type", "application/json")
                        .header("cust", "value") // Custom header
                        .body(jsonContext.jsonString()) // Use updated JSON as request body
                        .when()
                        .post("/update")  // API endpoint
                        .then()
                        .statusCode(200)  // Expecting HTTP 200 OK response
                        .extract()
                        .response();

                // Print response
                System.out.println("Request " + i + " Response: " + response.getBody().asString());
            }

            // Close the workbook
            workbook.close();
            fis.close();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}